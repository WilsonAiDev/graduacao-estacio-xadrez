# Makefile para o Projeto Xadrez - Todos os M√≥dulos
# Compila√ß√£o e execu√ß√£o do sistema completo

# Compilador e flags
CC = gcc
CFLAGS = -Wall -Wextra -std=c99 -Iinclude
SRCDIR_NOVATO = src/modulo_novato
SRCDIR_AVENTUREIRO = src/modulo_aventureiro
INCDIR = include
OBJDIR = obj
BINDIR = bin

# Arquivos fonte - M√≥dulo Novato
SOURCES_NOVATO = $(SRCDIR_NOVATO)/main.c $(SRCDIR_NOVATO)/utils.c $(SRCDIR_NOVATO)/torre.c $(SRCDIR_NOVATO)/bispo.c $(SRCDIR_NOVATO)/rainha.c
OBJECTS_NOVATO = $(OBJDIR)/novato_main.o $(OBJDIR)/novato_utils.o $(OBJDIR)/novato_torre.o $(OBJDIR)/novato_bispo.o $(OBJDIR)/novato_rainha.o
TARGET_NOVATO = $(BINDIR)/xadrez_novato

# Arquivos fonte - M√≥dulo Aventureiro  
SOURCES_AVENTUREIRO = $(SRCDIR_AVENTUREIRO)/main.c $(SRCDIR_NOVATO)/utils.c $(SRCDIR_AVENTUREIRO)/cavalo.c $(SRCDIR_AVENTUREIRO)/utils_aventureiro.c $(SRCDIR_AVENTUREIRO)/tutorial.c
OBJECTS_AVENTUREIRO = $(OBJDIR)/aventureiro_main.o $(OBJDIR)/aventureiro_utils.o $(OBJDIR)/aventureiro_cavalo.o $(OBJDIR)/aventureiro_utils_aventureiro.o $(OBJDIR)/aventureiro_tutorial.o
TARGET_AVENTUREIRO = $(BINDIR)/xadrez_aventureiro

# Regra principal
all: directories $(TARGET_NOVATO) $(TARGET_AVENTUREIRO)

# Criar diret√≥rios necess√°rios
directories:
	@mkdir -p $(OBJDIR) $(BINDIR)

# === M√ìDULO NOVATO ===
novato: directories $(TARGET_NOVATO)

$(TARGET_NOVATO): $(OBJECTS_NOVATO)
	@echo "üîó Linkando execut√°vel novato..."
	$(CC) $(CFLAGS) $(OBJECTS_NOVATO) -o $(TARGET_NOVATO)
	@echo "‚úÖ Execut√°vel criado: $(TARGET_NOVATO)"

# Compilar arquivos objeto do novato
$(OBJDIR)/novato_%.o: $(SRCDIR_NOVATO)/%.c
	@echo "üõ†Ô∏è  Compilando $<..."
	$(CC) $(CFLAGS) -c $< -o $@

# === M√ìDULO AVENTUREIRO ===
aventureiro: directories $(TARGET_AVENTUREIRO)

$(TARGET_AVENTUREIRO): $(OBJECTS_AVENTUREIRO)
	@echo "üîó Linkando execut√°vel aventureiro..."
	$(CC) $(CFLAGS) $(OBJECTS_AVENTUREIRO) -o $(TARGET_AVENTUREIRO)
	@echo "‚úÖ Execut√°vel criado: $(TARGET_AVENTUREIRO)"

# Compilar arquivos objeto do aventureiro
$(OBJDIR)/aventureiro_main.o: $(SRCDIR_AVENTUREIRO)/main.c
	@echo "üõ†Ô∏è  Compilando $<..."
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/aventureiro_utils.o: $(SRCDIR_NOVATO)/utils.c
	@echo "üõ†Ô∏è  Compilando $<..."
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/aventureiro_%.o: $(SRCDIR_AVENTUREIRO)/%.c
	@echo "üõ†Ô∏è  Compilando $<..."
	$(CC) $(CFLAGS) -c $< -o $@

# Executar programas
run-novato: $(TARGET_NOVATO)
	@echo "üöÄ Executando m√≥dulo novato..."
	./$(TARGET_NOVATO)

run-aventureiro: $(TARGET_AVENTUREIRO)
	@echo "üöÄ Executando m√≥dulo aventureiro..."
	./$(TARGET_AVENTUREIRO)

run: run-novato

# Limpar arquivos compilados
clean:
	@echo "üßπ Limpando arquivos compilados..."
	rm -rf $(OBJDIR) $(BINDIR)
	@echo "‚úÖ Limpeza conclu√≠da!"

# Recompilar tudo
rebuild: clean all

# Verificar sintaxe
check:
	@echo "üîç Verificando sintaxe dos arquivos..."
	$(CC) $(CFLAGS) -fsyntax-only $(SOURCES_NOVATO)
	$(CC) $(CFLAGS) -fsyntax-only $(SOURCES_AVENTUREIRO)
	@echo "‚úÖ Sintaxe verificada!"

# Compilar com debug
debug: CFLAGS += -g -DDEBUG
debug: all

# Compilar apenas um m√≥dulo
novato-only: novato
aventureiro-only: aventureiro

# Ajuda
help:
	@echo "üéØ Comandos dispon√≠veis:"
	@echo "  make all              - Compilar todos os m√≥dulos"
	@echo "  make novato           - Compilar apenas m√≥dulo novato"
	@echo "  make aventureiro      - Compilar apenas m√≥dulo aventureiro"
	@echo "  make run-novato       - Compilar e executar novato"
	@echo "  make run-aventureiro  - Compilar e executar aventureiro"
	@echo "  make run              - Executar m√≥dulo novato (padr√£o)"
	@echo "  make clean            - Limpar arquivos compilados"
	@echo "  make rebuild          - Recompilar tudo"
	@echo "  make check            - Verificar sintaxe"
	@echo "  make debug            - Compilar com s√≠mbolos de debug"
	@echo "  make help             - Exibir esta ajuda"

# Regras que n√£o criam arquivos
.PHONY: all run run-novato run-aventureiro clean rebuild check debug help directories novato aventureiro novato-only aventureiro-only
